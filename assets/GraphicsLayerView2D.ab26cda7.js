import{d1 as s,cE as p,a6 as h,a7 as a,a8 as o}from"./index.d747c412.js";import{y as g,u as m}from"./LayerView.777c8e01.js";import{i as l}from"./GraphicContainer.3c8d0d19.js";import{o as c}from"./BaseGraphicContainer.410397d6.js";import"./utils.7d381190.js";import"./Utils.333d3ed1.js";import"./enums.0295eb81.js";import"./enums.2d9e6f64.js";import"./Texture.7cb83fd3.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.7df3bd92.js";import"./ExpandedCIM.ef82ab5c.js";import"./BidiEngine.d8bba3fc.js";import"./Rect.95b0fd2e.js";import"./quantizationUtils.a5b37762.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.9d4b2c82.js";import"./normalizeUtilsSync.6059a4c2.js";import"./projectionSupport.15d51ab8.js";import"./json.879c9adc.js";import"./VertexArrayObject.48b5442f.js";import"./FeatureContainer.419d0c07.js";import"./TileContainer.ed52b858.js";import"./WGLContainer.4bd493de.js";import"./pixelUtils.87db881d.js";import"./ProgramTemplate.c548d4ca.js";import"./StyleDefinition.d56936e4.js";import"./config.82550349.js";import"./GeometryUtils.51c4032a.js";import"./earcut.afc1d357.js";import"./visualVariablesUtils.581e5e8c.js";import"./visualVariablesUtils.315e11c3.js";import"./Matcher.94c29d1d.js";import"./tileUtils.d75b138c.js";import"./TileClipper.e458a07c.js";import"./Geometry.d049a63c.js";import"./devEnvironmentUtils.d8d0484c.js";import"./schemaUtils.033082f2.js";import"./createSymbolSchema.406c1ee4.js";import"./util.7e83b7fe.js";import"./ComputedAttributeStorage.2bd3374d.js";import"./centroid.c53c607e.js";import"./vec3f32.1121a836.js";const n={remove(){},pause(){},resume(){}};let r=class extends g(m){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new c({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new l(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.handles.add(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),"graphicslayerview2d")}detach(){this.container.removeAllChildren(),this.graphicsView.destroy(),this.graphicsView=null,this.handles.remove("graphicslayerview2d")}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){if(this.graphicsView)return this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate)}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;return typeof i=="number"?t=[i]:i instanceof s?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(e=>e&&e.uid):p.isCollection(i)&&i.length>0&&(t=i.map(e=>e&&e.uid).toArray()),t=t==null?void 0:t.filter(e=>e!=null),t.length?(this._addHighlight(t),{remove:()=>this._removeHighlight(t)}):n}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t);this._highlightIds.set(t,e+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const e=this._highlightIds.get(t)-1;e===0?this._highlightIds.delete(t):this._highlightIds.set(t,e)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};h([a()],r.prototype,"graphicsView",void 0),r=h([o("esri.views.2d.layers.GraphicsLayerView2D")],r);const ri=r;export{ri as default};
